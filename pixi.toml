[project]
name = "pixi-tutorial"
version = "0.1.0"
description = "Add a short description here"
authors = ["Jermiah Joseph <jermiahjoseph98@gmail.com>"]
channels = ["conda-forge"]
platforms = ["osx-64", "osx-arm64", "linux-64"]

[system-requirements] # old linux requirement for my linux devices
linux = "5.4.203"

[environments]
r-dev = { features = ["r"], no-default-feature = true }
bench = { features = ["benchmarks", "plt"], no-default-feature = true }
yarn-dev = { features = ["yarn"], no-default-feature = false}

[dependencies]
python = ">=3.12.3,<3.13"


################################################################################
# BENCHMARK

# Benchmarking

[feature.benchmarks.dependencies]
hyperfine = ">=1.18.0,<1.19"
micromamba = ">=1.5.8,<1.6"
conda = ">=24.5.0,<24.6"

[feature.benchmarks.tasks.bench]
cmd = """
hyperfine --warmup 1 --runs 5
--export-markdown results/hyperfine.md 
--export-json results/hyperfine.json 
--prepare 'rm -rf pixi  || true'
 'pixi init -i dummy_env.yml pixi' 
--prepare 'rm  -rf micromamba || true'
 'micromamba create --file dummy_env.yml -p micromamba/.env --yes' 
--prepare 'rm  -rf conda || true'
 'conda env create -f dummy_env.yml -p conda/.env'
"""
inputs = ["benchmarks/dummy_env.yml"]
outputs = ["benchmarks/results/hyperfine.json"]
cwd = "benchmarks"
description = "Runs the benchmarks using hyperfine"

# Plotting

[feature.plt.dependencies]
matplotlib = ">=3.8.4,<3.9"

[feature.plt.tasks.plot]
cmd = """
python scripts/plot_bench.py
"""
cwd = "benchmarks"
depends-on = ["bench"]
inputs = ["benchmarks/results/hyperfine.json"]
outputs = ["benchmarks/results/benchmarks.png"]
description = "Plots the benchmarks generated by hyperfine"

# 
[feature.plt.tasks.start]
cmd = "open results/benchmarks.png"
inputs = ["benchmarks/results/benchmarks.png"]
depends-on = ["plot"]
cwd = "benchmarks"
description = "Opens the generated plot, automatically runs benchmark if needed"

################################################################################
# R Scripting

[feature.r.dependencies]
r-base = ">=4.3.3,<4.4"
r-ggplot2 = ">=3.5"

[feature.r.tasks]
rplot = { cmd = """
  Rscript scripts/plot_iris.R
  """, inputs = [
  "scripts/plot_iris.R"
], outputs = [
  "plots/plot1.png", "plots/plot2.png"
], description = "Download the Iris dataset and plot it using R" }

################################################################################
# Presentation Building

[feature.yarn.dependencies]
yarn = ">=4.3.0,<4.4"

[feature.yarn.tasks.setup]
cmd = "yarn install"
description = "Installs the dependencies for the presentation"

# Can also format toml tables like this: 
[feature.yarn.tasks.build-html]
cmd = "yarn run build-html"
inputs = ["pixi-tutorial.md", "package.json"]
depends-on = ["setup", "plot"]
description = "Build the HTML slides"

[feature.yarn.tasks.serve]
depends-on = ["setup", "build-html"]
cmd = "open slides.html"
description = "Serve the HTML slides"

[feature.yarn.tasks.build-pdf]
cmd = "yarn run build-pdf"
inputs = ["pixi-tutorial.md", "package.json"]
depends-on = ["setup", "plot"]
description = "Build the PDF slides"

[feature.yarn.tasks.export]
depends-on = ["setup", "build-pdf"]
cmd = "open slides.pdf"
description = "Open the PDF slides"


